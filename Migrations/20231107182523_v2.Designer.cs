// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI.Data;

#nullable disable

namespace WebAPI.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20231107182523_v2")]
    partial class v2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebAPI.Models.ApplicationRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("role");
                });

            modelBuilder.Entity("WebAPI.Models.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("MobileNumber")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TokenCreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TokenExpiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)");

                    b.HasKey("Id");

                    b.HasIndex("Login", "EmailAddress")
                        .IsUnique();

                    b.ToTable("user");
                });

            modelBuilder.Entity("WebAPI.Models.ApplicationUserRole", b =>
                {
                    b.Property<Guid>("ApplicationUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicationRoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ApplicationUserId", "ApplicationRoleId");

                    b.HasIndex("ApplicationRoleId");

                    b.ToTable("user_role");
                });

            modelBuilder.Entity("WebAPI.Models.ChartOfAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountHeaderName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("AccountHeaderNo")
                        .HasColumnType("int");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("AccountNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CurrencyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AccountNo")
                        .IsUnique();

                    b.HasIndex("CurrencyId");

                    b.ToTable("chart_of_account");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c98fcd17-ef7c-4781-a44b-c0d9e3840d96"),
                            AccountHeaderName = "Asset",
                            AccountHeaderNo = 100,
                            AccountName = "Kas",
                            AccountNo = 111
                        },
                        new
                        {
                            Id = new Guid("4905d891-57c7-476b-97b8-24b2f5d26eba"),
                            AccountHeaderName = "Asset",
                            AccountHeaderNo = 100,
                            AccountName = "Bank",
                            AccountNo = 112
                        },
                        new
                        {
                            Id = new Guid("5614c60b-29c1-4137-a304-210d3b8bc5bb"),
                            AccountHeaderName = "Asset",
                            AccountHeaderNo = 100,
                            AccountName = "Persediaan",
                            AccountNo = 113
                        },
                        new
                        {
                            Id = new Guid("faa10a6e-4433-4dc8-891f-7e47e2ab8602"),
                            AccountHeaderName = "Asset",
                            AccountHeaderNo = 100,
                            AccountName = "Perlengkapan",
                            AccountNo = 114
                        },
                        new
                        {
                            Id = new Guid("36eaf193-9eed-43e2-a25b-9e7c3c6d87ed"),
                            AccountHeaderName = "Asset",
                            AccountHeaderNo = 100,
                            AccountName = "Sewa dibayar di muka",
                            AccountNo = 115
                        },
                        new
                        {
                            Id = new Guid("852c439a-23a0-4645-a56a-f2c183b9a2b5"),
                            AccountHeaderName = "Asset",
                            AccountHeaderNo = 100,
                            AccountName = "Peralatan",
                            AccountNo = 121
                        },
                        new
                        {
                            Id = new Guid("4d6d2376-35c0-4cb8-ad10-7bb2671fe096"),
                            AccountHeaderName = "Asset",
                            AccountHeaderNo = 100,
                            AccountName = "Akumulasi Depresiasi - Mesin Cuci",
                            AccountNo = 122
                        },
                        new
                        {
                            Id = new Guid("b6b376f9-490a-4078-989a-90fbb6d99cc9"),
                            AccountHeaderName = "Liabilitas",
                            AccountHeaderNo = 200,
                            AccountName = "Utang Usaha",
                            AccountNo = 201
                        },
                        new
                        {
                            Id = new Guid("05715063-7fb4-49be-92f9-a25e9ef1340c"),
                            AccountHeaderName = "Ekuitas",
                            AccountHeaderNo = 300,
                            AccountName = "Ekuitas Pemilik Usaha",
                            AccountNo = 301
                        },
                        new
                        {
                            Id = new Guid("4367ea09-0b5e-415e-99cf-7f3bba3abd55"),
                            AccountHeaderName = "Pendapatan",
                            AccountHeaderNo = 400,
                            AccountName = "Pendapatan Penjualan",
                            AccountNo = 401
                        },
                        new
                        {
                            Id = new Guid("884ebd0a-7427-4732-bf51-711facd6d041"),
                            AccountHeaderName = "Pengeluaran",
                            AccountHeaderNo = 500,
                            AccountName = "Beban Gaji",
                            AccountNo = 501
                        },
                        new
                        {
                            Id = new Guid("23c7a597-fae3-40f4-ba84-6702cadb39a6"),
                            AccountHeaderName = "Pengeluaran",
                            AccountHeaderNo = 500,
                            AccountName = "Beban Sewa",
                            AccountNo = 502
                        },
                        new
                        {
                            Id = new Guid("b76db597-cdb7-493c-aef2-6f474b08cbd3"),
                            AccountHeaderName = "Pengeluaran",
                            AccountHeaderNo = 500,
                            AccountName = "Beban Utilitas",
                            AccountNo = 503
                        },
                        new
                        {
                            Id = new Guid("2d11cd7a-bbbf-4f2a-af12-686dd83a2200"),
                            AccountHeaderName = "Pengeluaran",
                            AccountHeaderNo = 500,
                            AccountName = "Beban Listrik",
                            AccountNo = 504
                        },
                        new
                        {
                            Id = new Guid("af8d8bfa-fdf1-4508-9433-c3a4930f046e"),
                            AccountHeaderName = "Pengeluaran",
                            AccountHeaderNo = 500,
                            AccountName = "Beban Perlengkapan",
                            AccountNo = 505
                        },
                        new
                        {
                            Id = new Guid("8a8ffadd-b83c-488d-87b4-abef923fa59e"),
                            AccountHeaderName = "Pengeluaran",
                            AccountHeaderNo = 500,
                            AccountName = "Beban Depresiasi",
                            AccountNo = 506
                        });
                });

            modelBuilder.Entity("WebAPI.Models.Currency", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CultureName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.HasIndex("Name", "Code", "CultureName")
                        .IsUnique();

                    b.ToTable("currency");

                    b.HasData(
                        new
                        {
                            Id = new Guid("10930b60-2c60-4daa-be3d-ebd35c22f359"),
                            Code = "IDR",
                            CultureName = "id-ID",
                            Name = "Indonesia Rupiah"
                        },
                        new
                        {
                            Id = new Guid("41483a1e-ad2c-43fd-87ec-95188e8c9bfd"),
                            Code = "SGD",
                            CultureName = "en-SG",
                            Name = "Dollar Singapore"
                        },
                        new
                        {
                            Id = new Guid("e536582c-8347-489c-b6c1-4435de12d1a7"),
                            Code = "MYR",
                            CultureName = "ms-MY",
                            Name = "Ringgit Malaysia"
                        },
                        new
                        {
                            Id = new Guid("14071cc8-4369-42c8-aa92-7a2bb17ad07c"),
                            Code = "USD",
                            CultureName = "en-US",
                            Name = "Dollar USD"
                        });
                });

            modelBuilder.Entity("WebAPI.Models.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CurrencyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomerAddress")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("CustomerCode")
                        .IsUnique();

                    b.ToTable("customer");
                });

            modelBuilder.Entity("WebAPI.Models.GeneralAccountDetail", b =>
                {
                    b.Property<Guid>("GeneralAccountHeaderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("GeneralAccountDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<Guid>("ChartOfAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Credit")
                        .HasPrecision(19, 4)
                        .HasColumnType("decimal(19,4)");

                    b.Property<decimal>("Debit")
                        .HasPrecision(19, 4)
                        .HasColumnType("decimal(19,4)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GeneralAccountHeaderId", "GeneralAccountDetailId");

                    b.HasIndex("ChartOfAccountId");

                    b.ToTable("general_account_detail");
                });

            modelBuilder.Entity("WebAPI.Models.GeneralAccountHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("date");

                    b.Property<string>("TransactionNo")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.HasIndex("TransactionNo")
                        .IsUnique();

                    b.ToTable("general_account_header");
                });

            modelBuilder.Entity("WebAPI.Models.Inventory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("ItemNo")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ItemNo")
                        .IsUnique();

                    b.ToTable("inventory");
                });

            modelBuilder.Entity("WebAPI.Models.LaundryService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LaundryProcess")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("laundry_service");

                    b.HasData(
                        new
                        {
                            Id = new Guid("29beb618-8301-493e-ae83-f146d8d0bbdd"),
                            LaundryProcess = 7,
                            Name = "PAKET BULANAN LENGKAP"
                        },
                        new
                        {
                            Id = new Guid("ecd36d91-f970-4e8f-8f65-3d9be96e0a37"),
                            LaundryProcess = 4,
                            Name = "PAKET BULANAN SETRIKA"
                        },
                        new
                        {
                            Id = new Guid("75e0983a-677f-4604-a0b4-478d214e9598"),
                            LaundryProcess = 3,
                            Name = "SATUAN"
                        },
                        new
                        {
                            Id = new Guid("1321a22b-b7a4-44a6-ab6a-f5ad50cd314a"),
                            LaundryProcess = 3,
                            Name = "SEPATU DAN TAS"
                        },
                        new
                        {
                            Id = new Guid("a7395bb6-30fb-4767-9d3b-68d03fbf795b"),
                            LaundryProcess = 3,
                            Name = "KARPET/GORDEN"
                        },
                        new
                        {
                            Id = new Guid("302045f7-e303-4bda-b00e-1856fe0e7801"),
                            LaundryProcess = 7,
                            Name = "KILOAN LENGKAP"
                        },
                        new
                        {
                            Id = new Guid("ac8f3f6e-c2e3-4bc6-84c5-520327ef4f1d"),
                            LaundryProcess = 7,
                            Name = "KILOAN SETRIKA/CUCI LIPAT"
                        },
                        new
                        {
                            Id = new Guid("5c65db87-598e-40bf-821c-0acf5d19999a"),
                            LaundryProcess = 3,
                            Name = "BED COVER & SELIMUT"
                        },
                        new
                        {
                            Id = new Guid("b1c9d482-d63f-4dd6-898d-18bfb3730f11"),
                            LaundryProcess = 3,
                            Name = "SPREI & ALAS KASUR"
                        },
                        new
                        {
                            Id = new Guid("8223d17d-c036-4601-b723-4cb3e6d3ede0"),
                            LaundryProcess = 3,
                            Name = "BANTAL/BONEKA"
                        });
                });

            modelBuilder.Entity("WebAPI.Models.PriceMenu", b =>
                {
                    b.Property<Guid>("LaundryServiceId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("PriceMenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeliveryOption")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Price")
                        .HasPrecision(19, 3)
                        .HasColumnType("decimal(19,3)");

                    b.Property<int>("PricingOption")
                        .HasColumnType("int");

                    b.Property<int>("ProcessingTime")
                        .HasColumnType("int");

                    b.Property<int>("TimeUnit")
                        .HasColumnType("int");

                    b.HasKey("LaundryServiceId", "PriceMenuId");

                    b.HasIndex("LaundryServiceId", "Name", "DeliveryOption")
                        .IsUnique();

                    b.ToTable("price_menu");

                    b.HasData(
                        new
                        {
                            LaundryServiceId = new Guid("29beb618-8301-493e-ae83-f146d8d0bbdd"),
                            PriceMenuId = new Guid("c96d3594-b647-4f2b-b0a1-38edb879c12d"),
                            DeliveryOption = 0,
                            Name = "25 Kgs",
                            Price = 140000m,
                            PricingOption = 8,
                            ProcessingTime = 0,
                            TimeUnit = 0
                        },
                        new
                        {
                            LaundryServiceId = new Guid("29beb618-8301-493e-ae83-f146d8d0bbdd"),
                            PriceMenuId = new Guid("63c5432d-0c8c-45bc-a41c-a1ecf13750ea"),
                            DeliveryOption = 0,
                            Name = "50 Kgs",
                            Price = 275000m,
                            PricingOption = 8,
                            ProcessingTime = 0,
                            TimeUnit = 0
                        },
                        new
                        {
                            LaundryServiceId = new Guid("29beb618-8301-493e-ae83-f146d8d0bbdd"),
                            PriceMenuId = new Guid("b0371d55-6b22-4df2-9eb7-815297c6c5ca"),
                            DeliveryOption = 0,
                            Name = "100 Kgs",
                            Price = 550000m,
                            PricingOption = 8,
                            ProcessingTime = 0,
                            TimeUnit = 0
                        },
                        new
                        {
                            LaundryServiceId = new Guid("ecd36d91-f970-4e8f-8f65-3d9be96e0a37"),
                            PriceMenuId = new Guid("c52ba3df-8088-4ddb-8fa4-60984b39a21f"),
                            DeliveryOption = 0,
                            Name = "25 Kgs",
                            Price = 120000m,
                            PricingOption = 8,
                            ProcessingTime = 0,
                            TimeUnit = 0
                        },
                        new
                        {
                            LaundryServiceId = new Guid("ecd36d91-f970-4e8f-8f65-3d9be96e0a37"),
                            PriceMenuId = new Guid("02ea5984-b8ed-4e6e-bd18-f281a75ca503"),
                            DeliveryOption = 0,
                            Name = "50 Kgs",
                            Price = 240000m,
                            PricingOption = 8,
                            ProcessingTime = 0,
                            TimeUnit = 0
                        },
                        new
                        {
                            LaundryServiceId = new Guid("ecd36d91-f970-4e8f-8f65-3d9be96e0a37"),
                            PriceMenuId = new Guid("0a976b33-0d6d-4979-9a52-963f880d03dd"),
                            DeliveryOption = 0,
                            Name = "100 Kgs",
                            Price = 475000m,
                            PricingOption = 8,
                            ProcessingTime = 0,
                            TimeUnit = 0
                        },
                        new
                        {
                            LaundryServiceId = new Guid("75e0983a-677f-4604-a0b4-478d214e9598"),
                            PriceMenuId = new Guid("6a635d7b-e3e5-4020-ba3b-30bba861e746"),
                            DeliveryOption = 1,
                            Name = "Bawahan",
                            Price = 10000m,
                            PricingOption = 1,
                            ProcessingTime = 2,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("75e0983a-677f-4604-a0b4-478d214e9598"),
                            PriceMenuId = new Guid("44da787e-5d33-4860-8242-f7ca3b17a733"),
                            DeliveryOption = 1,
                            Name = "Atasan",
                            Price = 10000m,
                            PricingOption = 1,
                            ProcessingTime = 2,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("75e0983a-677f-4604-a0b4-478d214e9598"),
                            PriceMenuId = new Guid("f374defc-5885-4065-b615-2de763e4b163"),
                            DeliveryOption = 1,
                            Name = "Jas",
                            Price = 20000m,
                            PricingOption = 1,
                            ProcessingTime = 2,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("75e0983a-677f-4604-a0b4-478d214e9598"),
                            PriceMenuId = new Guid("bb0c462a-f3e3-42bb-bc3f-aa891084e35d"),
                            DeliveryOption = 1,
                            Name = "Jas Set",
                            Price = 30000m,
                            PricingOption = 1,
                            ProcessingTime = 2,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("75e0983a-677f-4604-a0b4-478d214e9598"),
                            PriceMenuId = new Guid("d8a44d07-4895-4b70-9318-91f17358bcc2"),
                            DeliveryOption = 1,
                            Name = "Blazer",
                            Price = 15000m,
                            PricingOption = 1,
                            ProcessingTime = 2,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("75e0983a-677f-4604-a0b4-478d214e9598"),
                            PriceMenuId = new Guid("9d88e120-c6e6-4c0a-af66-f42a31b1340c"),
                            DeliveryOption = 1,
                            Name = "Blazer Set",
                            Price = 25000m,
                            PricingOption = 1,
                            ProcessingTime = 2,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("75e0983a-677f-4604-a0b4-478d214e9598"),
                            PriceMenuId = new Guid("0bb4a89a-3192-4007-9a8c-4a7cc4285230"),
                            DeliveryOption = 1,
                            Name = "Dress Panjang",
                            Price = 15000m,
                            PricingOption = 1,
                            ProcessingTime = 2,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("75e0983a-677f-4604-a0b4-478d214e9598"),
                            PriceMenuId = new Guid("1f26e158-ca65-418e-a404-6c7926992273"),
                            DeliveryOption = 1,
                            Name = "Dress Pendek",
                            Price = 15000m,
                            PricingOption = 1,
                            ProcessingTime = 2,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("75e0983a-677f-4604-a0b4-478d214e9598"),
                            PriceMenuId = new Guid("f81d23fa-1ecd-42b7-87cc-bd84665b46ca"),
                            DeliveryOption = 1,
                            Name = "Jaket/Sweater",
                            Price = 15000m,
                            PricingOption = 1,
                            ProcessingTime = 2,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("75e0983a-677f-4604-a0b4-478d214e9598"),
                            PriceMenuId = new Guid("bf81a4b9-2f80-40ae-b1c1-d8b595b41f96"),
                            DeliveryOption = 1,
                            Name = "Handuk Besar",
                            Price = 7000m,
                            PricingOption = 1,
                            ProcessingTime = 2,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("75e0983a-677f-4604-a0b4-478d214e9598"),
                            PriceMenuId = new Guid("1191ca1b-c2ea-406d-8614-e3bd1d10727b"),
                            DeliveryOption = 1,
                            Name = "Handuk Sedang",
                            Price = 6000m,
                            PricingOption = 1,
                            ProcessingTime = 2,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("1321a22b-b7a4-44a6-ab6a-f5ad50cd314a"),
                            PriceMenuId = new Guid("164c20a0-806a-4e72-a2c1-0f1688e7b920"),
                            DeliveryOption = 1,
                            Name = "Sepatu",
                            Price = 25000m,
                            PricingOption = 1,
                            ProcessingTime = 2,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("1321a22b-b7a4-44a6-ab6a-f5ad50cd314a"),
                            PriceMenuId = new Guid("4a5b2032-cbd2-4959-bfe5-cb3f00bbb7d3"),
                            DeliveryOption = 1,
                            Name = "Tas Besar",
                            Price = 30000m,
                            PricingOption = 1,
                            ProcessingTime = 2,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("1321a22b-b7a4-44a6-ab6a-f5ad50cd314a"),
                            PriceMenuId = new Guid("0c64ea8d-9606-44b4-ac27-91cccca3eeed"),
                            DeliveryOption = 1,
                            Name = "Tas Sedang",
                            Price = 25000m,
                            PricingOption = 1,
                            ProcessingTime = 2,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("1321a22b-b7a4-44a6-ab6a-f5ad50cd314a"),
                            PriceMenuId = new Guid("52d0965f-260c-4ae3-b714-aee4250099a3"),
                            DeliveryOption = 1,
                            Name = "Tas Kecil",
                            Price = 15000m,
                            PricingOption = 1,
                            ProcessingTime = 2,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("1321a22b-b7a4-44a6-ab6a-f5ad50cd314a"),
                            PriceMenuId = new Guid("236aa4c3-7c48-4cce-9053-ec18be6df18c"),
                            DeliveryOption = 1,
                            Name = "Tas Mini",
                            Price = 10000m,
                            PricingOption = 1,
                            ProcessingTime = 2,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("302045f7-e303-4bda-b00e-1856fe0e7801"),
                            PriceMenuId = new Guid("ca131bbf-e81d-4a1c-b6a6-75a2e9314e7e"),
                            DeliveryOption = 1,
                            Name = "Reguler",
                            Price = 6000m,
                            PricingOption = 2,
                            ProcessingTime = 2,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("302045f7-e303-4bda-b00e-1856fe0e7801"),
                            PriceMenuId = new Guid("16741d42-0132-4591-a960-a604e31fa225"),
                            DeliveryOption = 2,
                            Name = "One Day",
                            Price = 8000m,
                            PricingOption = 2,
                            ProcessingTime = 1,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("302045f7-e303-4bda-b00e-1856fe0e7801"),
                            PriceMenuId = new Guid("273546b1-425a-4c8a-8f4f-2d190998cf42"),
                            DeliveryOption = 4,
                            Name = "Express",
                            Price = 10000m,
                            PricingOption = 2,
                            ProcessingTime = 6,
                            TimeUnit = 1
                        },
                        new
                        {
                            LaundryServiceId = new Guid("ac8f3f6e-c2e3-4bc6-84c5-520327ef4f1d"),
                            PriceMenuId = new Guid("339713a0-05fd-4a7d-b5e6-ec2a2a3831c8"),
                            DeliveryOption = 1,
                            Name = "Reguler",
                            Price = 5000m,
                            PricingOption = 2,
                            ProcessingTime = 2,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("ac8f3f6e-c2e3-4bc6-84c5-520327ef4f1d"),
                            PriceMenuId = new Guid("331902b7-5b9b-4b8d-9dda-77de63489cce"),
                            DeliveryOption = 2,
                            Name = "One Day",
                            Price = 7000m,
                            PricingOption = 2,
                            ProcessingTime = 1,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("ac8f3f6e-c2e3-4bc6-84c5-520327ef4f1d"),
                            PriceMenuId = new Guid("b34d53f0-a596-42fe-9fb9-e01bd3cd7a32"),
                            DeliveryOption = 4,
                            Name = "Express",
                            Price = 9000m,
                            PricingOption = 2,
                            ProcessingTime = 6,
                            TimeUnit = 1
                        },
                        new
                        {
                            LaundryServiceId = new Guid("5c65db87-598e-40bf-821c-0acf5d19999a"),
                            PriceMenuId = new Guid("68ef264a-a5f6-4b8e-b54d-2b38fc17aac8"),
                            DeliveryOption = 1,
                            Name = "Bed Cover King Set",
                            Price = 38000m,
                            PricingOption = 4,
                            ProcessingTime = 3,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("5c65db87-598e-40bf-821c-0acf5d19999a"),
                            PriceMenuId = new Guid("7fa6dcc4-f367-4c17-8781-b32e3d874249"),
                            DeliveryOption = 1,
                            Name = "Bed Cover Queen Set",
                            Price = 35000m,
                            PricingOption = 4,
                            ProcessingTime = 3,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("5c65db87-598e-40bf-821c-0acf5d19999a"),
                            PriceMenuId = new Guid("98565c64-329b-4dde-a527-d72649ec8335"),
                            DeliveryOption = 1,
                            Name = "Bed Cover Single Set",
                            Price = 27000m,
                            PricingOption = 4,
                            ProcessingTime = 3,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("5c65db87-598e-40bf-821c-0acf5d19999a"),
                            PriceMenuId = new Guid("ff647078-2430-4d92-ae23-e8636da71e1e"),
                            DeliveryOption = 1,
                            Name = "Bed Cover King",
                            Price = 25000m,
                            PricingOption = 1,
                            ProcessingTime = 3,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("5c65db87-598e-40bf-821c-0acf5d19999a"),
                            PriceMenuId = new Guid("9f756e7d-7166-4c47-85bb-b7b98fc1e565"),
                            DeliveryOption = 1,
                            Name = "Bed Cover Queen",
                            Price = 20000m,
                            PricingOption = 1,
                            ProcessingTime = 3,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("5c65db87-598e-40bf-821c-0acf5d19999a"),
                            PriceMenuId = new Guid("26aff994-b7f4-4ef4-bf29-11252eb25aab"),
                            DeliveryOption = 1,
                            Name = "Bed Cover Single",
                            Price = 15000m,
                            PricingOption = 1,
                            ProcessingTime = 3,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("5c65db87-598e-40bf-821c-0acf5d19999a"),
                            PriceMenuId = new Guid("ba8371dc-a654-474d-977f-27fd18834f7c"),
                            DeliveryOption = 1,
                            Name = "Selimut",
                            Price = 15000m,
                            PricingOption = 1,
                            ProcessingTime = 3,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("5c65db87-598e-40bf-821c-0acf5d19999a"),
                            PriceMenuId = new Guid("f7e1e027-d323-48b1-a183-6296c776f11f"),
                            DeliveryOption = 1,
                            Name = "Selimut Tipis",
                            Price = 10000m,
                            PricingOption = 1,
                            ProcessingTime = 3,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("5c65db87-598e-40bf-821c-0acf5d19999a"),
                            PriceMenuId = new Guid("4fb27742-8853-420c-8add-dfee27d29c32"),
                            DeliveryOption = 4,
                            Name = "Bed Cover King Set",
                            Price = 76000m,
                            PricingOption = 4,
                            ProcessingTime = 6,
                            TimeUnit = 1
                        },
                        new
                        {
                            LaundryServiceId = new Guid("5c65db87-598e-40bf-821c-0acf5d19999a"),
                            PriceMenuId = new Guid("55cf4f98-dd64-4d44-bcb1-ad852b55d27f"),
                            DeliveryOption = 4,
                            Name = "Bed Cover Queen Set",
                            Price = 70000m,
                            PricingOption = 4,
                            ProcessingTime = 6,
                            TimeUnit = 1
                        },
                        new
                        {
                            LaundryServiceId = new Guid("5c65db87-598e-40bf-821c-0acf5d19999a"),
                            PriceMenuId = new Guid("82db1721-1eb6-4c67-bd01-699bb0a37b59"),
                            DeliveryOption = 4,
                            Name = "Bed Cover Single Set",
                            Price = 54000m,
                            PricingOption = 4,
                            ProcessingTime = 6,
                            TimeUnit = 1
                        },
                        new
                        {
                            LaundryServiceId = new Guid("5c65db87-598e-40bf-821c-0acf5d19999a"),
                            PriceMenuId = new Guid("3b5edc4b-c643-4c67-9e56-3f034d0f73a7"),
                            DeliveryOption = 4,
                            Name = "Bed Cover King",
                            Price = 50000m,
                            PricingOption = 1,
                            ProcessingTime = 6,
                            TimeUnit = 1
                        },
                        new
                        {
                            LaundryServiceId = new Guid("5c65db87-598e-40bf-821c-0acf5d19999a"),
                            PriceMenuId = new Guid("4166c909-1917-4a4e-93eb-acc50a375797"),
                            DeliveryOption = 4,
                            Name = "Bed Cover Queen",
                            Price = 40000m,
                            PricingOption = 1,
                            ProcessingTime = 6,
                            TimeUnit = 1
                        },
                        new
                        {
                            LaundryServiceId = new Guid("5c65db87-598e-40bf-821c-0acf5d19999a"),
                            PriceMenuId = new Guid("618e6bf2-8e14-488d-bfe8-5303af7ca4b9"),
                            DeliveryOption = 4,
                            Name = "Bed Cover Single",
                            Price = 30000m,
                            PricingOption = 1,
                            ProcessingTime = 6,
                            TimeUnit = 1
                        },
                        new
                        {
                            LaundryServiceId = new Guid("5c65db87-598e-40bf-821c-0acf5d19999a"),
                            PriceMenuId = new Guid("62f85138-7916-4fc5-aee1-a2076ac69256"),
                            DeliveryOption = 4,
                            Name = "Selimut",
                            Price = 30000m,
                            PricingOption = 1,
                            ProcessingTime = 6,
                            TimeUnit = 1
                        },
                        new
                        {
                            LaundryServiceId = new Guid("5c65db87-598e-40bf-821c-0acf5d19999a"),
                            PriceMenuId = new Guid("83aab2c3-a298-42b2-8145-0ab065cd61dc"),
                            DeliveryOption = 4,
                            Name = "Selimut Tipis",
                            Price = 20000m,
                            PricingOption = 1,
                            ProcessingTime = 6,
                            TimeUnit = 1
                        },
                        new
                        {
                            LaundryServiceId = new Guid("b1c9d482-d63f-4dd6-898d-18bfb3730f11"),
                            PriceMenuId = new Guid("f2f43c4c-f275-45f2-926b-02aef7c07e3c"),
                            DeliveryOption = 1,
                            Name = "Sprei King Set",
                            Price = 20000m,
                            PricingOption = 4,
                            ProcessingTime = 3,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("b1c9d482-d63f-4dd6-898d-18bfb3730f11"),
                            PriceMenuId = new Guid("bf9c37a9-0645-481b-bcde-1b56607e8f7e"),
                            DeliveryOption = 1,
                            Name = "Sprei Quen Set",
                            Price = 20000m,
                            PricingOption = 4,
                            ProcessingTime = 3,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("b1c9d482-d63f-4dd6-898d-18bfb3730f11"),
                            PriceMenuId = new Guid("ddd564a7-b395-4ead-9d5f-86ced965f468"),
                            DeliveryOption = 1,
                            Name = "Sprei Single Set",
                            Price = 15000m,
                            PricingOption = 4,
                            ProcessingTime = 3,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("b1c9d482-d63f-4dd6-898d-18bfb3730f11"),
                            PriceMenuId = new Guid("68df888c-4dcf-4657-9bbb-7d01936255ce"),
                            DeliveryOption = 1,
                            Name = "Sprei King",
                            Price = 15000m,
                            PricingOption = 1,
                            ProcessingTime = 3,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("b1c9d482-d63f-4dd6-898d-18bfb3730f11"),
                            PriceMenuId = new Guid("3cadfd31-8049-4b7d-9cba-6ef03da9d36d"),
                            DeliveryOption = 1,
                            Name = "Sprei Queen",
                            Price = 15000m,
                            PricingOption = 1,
                            ProcessingTime = 3,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("b1c9d482-d63f-4dd6-898d-18bfb3730f11"),
                            PriceMenuId = new Guid("941d94c3-5b9f-40ef-949c-b860e9262a6b"),
                            DeliveryOption = 1,
                            Name = "Sprei Single",
                            Price = 10000m,
                            PricingOption = 1,
                            ProcessingTime = 3,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("b1c9d482-d63f-4dd6-898d-18bfb3730f11"),
                            PriceMenuId = new Guid("b300944b-7e44-4925-b2f0-fe8b656c1057"),
                            DeliveryOption = 1,
                            Name = "Alas Kasur King",
                            Price = 25000m,
                            PricingOption = 1,
                            ProcessingTime = 3,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("b1c9d482-d63f-4dd6-898d-18bfb3730f11"),
                            PriceMenuId = new Guid("0077451c-a72c-4a1f-8265-de8ad3ff13bf"),
                            DeliveryOption = 1,
                            Name = "Alas Kasur Queen",
                            Price = 20000m,
                            PricingOption = 1,
                            ProcessingTime = 3,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("b1c9d482-d63f-4dd6-898d-18bfb3730f11"),
                            PriceMenuId = new Guid("36683734-99a7-435a-a5dd-3252ff7c1439"),
                            DeliveryOption = 1,
                            Name = "Alas Kasur Single",
                            Price = 15000m,
                            PricingOption = 1,
                            ProcessingTime = 3,
                            TimeUnit = 2
                        });
                });

            modelBuilder.Entity("WebAPI.Models.PurchaseDetail", b =>
                {
                    b.Property<Guid>("PurchaseHeaderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("PurchaseDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("InventoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasPrecision(19, 4)
                        .HasColumnType("decimal(19,4)");

                    b.Property<decimal>("Quantity")
                        .HasPrecision(19, 4)
                        .HasColumnType("decimal(19,4)");

                    b.HasKey("PurchaseHeaderId", "PurchaseDetailId");

                    b.HasIndex("InventoryId");

                    b.ToTable("purchase_detail");
                });

            modelBuilder.Entity("WebAPI.Models.PurchaseHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CurrencyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("date");

                    b.Property<string>("PurchaseNo")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<Guid>("SupplierId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("PurchaseNo")
                        .IsUnique();

                    b.HasIndex("SupplierId");

                    b.ToTable("purchase_header");
                });

            modelBuilder.Entity("WebAPI.Models.SalesDetail", b =>
                {
                    b.Property<Guid>("SalesHeaderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("SalesDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LaundryServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasPrecision(19, 4)
                        .HasColumnType("decimal(19,4)");

                    b.Property<Guid>("PriceMenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Quantity")
                        .HasPrecision(19, 4)
                        .HasColumnType("decimal(19,4)");

                    b.HasKey("SalesHeaderId", "SalesDetailId");

                    b.HasIndex("LaundryServiceId", "PriceMenuId");

                    b.ToTable("sales_detail");
                });

            modelBuilder.Entity("WebAPI.Models.SalesHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CurrencyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SalesDate")
                        .HasColumnType("date");

                    b.Property<string>("SalesNo")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("SalesNo")
                        .IsUnique();

                    b.ToTable("sales_header");
                });

            modelBuilder.Entity("WebAPI.Models.SalesPayment", b =>
                {
                    b.Property<Guid>("SalesPaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<Guid>("SalesHeaderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<decimal>("Amount")
                        .HasPrecision(19, 4)
                        .HasColumnType("decimal(19,4)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SalesPaymentId", "SalesHeaderId");

                    b.HasIndex("SalesHeaderId");

                    b.ToTable("sales_payment");
                });

            modelBuilder.Entity("WebAPI.Models.Supplier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CurrencyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierCode")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("SupplierCode")
                        .IsUnique();

                    b.ToTable("supplier");
                });

            modelBuilder.Entity("WebAPI.Models.ApplicationUserRole", b =>
                {
                    b.HasOne("WebAPI.Models.ApplicationRole", "ApplicationRole")
                        .WithMany("UserRoles")
                        .HasForeignKey("ApplicationRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("UserRoles")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationRole");

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("WebAPI.Models.ChartOfAccount", b =>
                {
                    b.HasOne("WebAPI.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("WebAPI.Models.Customer", b =>
                {
                    b.HasOne("WebAPI.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("WebAPI.Models.GeneralAccountDetail", b =>
                {
                    b.HasOne("WebAPI.Models.ChartOfAccount", "ChartOfAccount")
                        .WithMany("GeneralAccountDetails")
                        .HasForeignKey("ChartOfAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.Models.GeneralAccountHeader", "GeneralAccountHeader")
                        .WithMany("GeneralAccountDetails")
                        .HasForeignKey("GeneralAccountHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChartOfAccount");

                    b.Navigation("GeneralAccountHeader");
                });

            modelBuilder.Entity("WebAPI.Models.PriceMenu", b =>
                {
                    b.HasOne("WebAPI.Models.LaundryService", "LaundryService")
                        .WithMany("PriceMenus")
                        .HasForeignKey("LaundryServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LaundryService");
                });

            modelBuilder.Entity("WebAPI.Models.PurchaseDetail", b =>
                {
                    b.HasOne("WebAPI.Models.Inventory", "Inventory")
                        .WithMany("PurchaseDetails")
                        .HasForeignKey("InventoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.Models.PurchaseHeader", "PurchaseHeader")
                        .WithMany("PurchaseDetails")
                        .HasForeignKey("PurchaseHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inventory");

                    b.Navigation("PurchaseHeader");
                });

            modelBuilder.Entity("WebAPI.Models.PurchaseHeader", b =>
                {
                    b.HasOne("WebAPI.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("WebAPI.Models.Supplier", "Supplier")
                        .WithMany("PurchaseHeaders")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("WebAPI.Models.SalesDetail", b =>
                {
                    b.HasOne("WebAPI.Models.LaundryService", "LaundryService")
                        .WithMany()
                        .HasForeignKey("LaundryServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.Models.SalesHeader", "SalesHeader")
                        .WithMany("SalesDetails")
                        .HasForeignKey("SalesHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.Models.PriceMenu", "PriceMenu")
                        .WithMany("SalesDetails")
                        .HasForeignKey("LaundryServiceId", "PriceMenuId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("LaundryService");

                    b.Navigation("PriceMenu");

                    b.Navigation("SalesHeader");
                });

            modelBuilder.Entity("WebAPI.Models.SalesHeader", b =>
                {
                    b.HasOne("WebAPI.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("WebAPI.Models.Customer", "Customer")
                        .WithMany("SalesHeaders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("WebAPI.Models.SalesPayment", b =>
                {
                    b.HasOne("WebAPI.Models.SalesHeader", "SalesHeader")
                        .WithMany("SalesPayments")
                        .HasForeignKey("SalesHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SalesHeader");
                });

            modelBuilder.Entity("WebAPI.Models.Supplier", b =>
                {
                    b.HasOne("WebAPI.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("WebAPI.Models.ApplicationRole", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("WebAPI.Models.ApplicationUser", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("WebAPI.Models.ChartOfAccount", b =>
                {
                    b.Navigation("GeneralAccountDetails");
                });

            modelBuilder.Entity("WebAPI.Models.Customer", b =>
                {
                    b.Navigation("SalesHeaders");
                });

            modelBuilder.Entity("WebAPI.Models.GeneralAccountHeader", b =>
                {
                    b.Navigation("GeneralAccountDetails");
                });

            modelBuilder.Entity("WebAPI.Models.Inventory", b =>
                {
                    b.Navigation("PurchaseDetails");
                });

            modelBuilder.Entity("WebAPI.Models.LaundryService", b =>
                {
                    b.Navigation("PriceMenus");
                });

            modelBuilder.Entity("WebAPI.Models.PriceMenu", b =>
                {
                    b.Navigation("SalesDetails");
                });

            modelBuilder.Entity("WebAPI.Models.PurchaseHeader", b =>
                {
                    b.Navigation("PurchaseDetails");
                });

            modelBuilder.Entity("WebAPI.Models.SalesHeader", b =>
                {
                    b.Navigation("SalesDetails");

                    b.Navigation("SalesPayments");
                });

            modelBuilder.Entity("WebAPI.Models.Supplier", b =>
                {
                    b.Navigation("PurchaseHeaders");
                });
#pragma warning restore 612, 618
        }
    }
}
