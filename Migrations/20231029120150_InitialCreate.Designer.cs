// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI.Data;

#nullable disable

namespace WebAPI.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20231029120150_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebAPI.Models.ApplicationRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("role");
                });

            modelBuilder.Entity("WebAPI.Models.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("MobileNumber")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)");

                    b.HasKey("Id");

                    b.HasIndex("Login", "EmailAddress")
                        .IsUnique();

                    b.ToTable("user");
                });

            modelBuilder.Entity("WebAPI.Models.ApplicationUserRole", b =>
                {
                    b.Property<Guid>("ApplicationUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicationRoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ApplicationUserId", "ApplicationRoleId");

                    b.HasIndex("ApplicationRoleId");

                    b.ToTable("user_role");
                });

            modelBuilder.Entity("WebAPI.Models.ChartOfAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountHeaderName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("AccountHeaderNo")
                        .HasColumnType("int");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("AccountNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CurrencyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AccountNo")
                        .IsUnique();

                    b.HasIndex("CurrencyId");

                    b.ToTable("chart_of_account");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4641765c-ee78-4a2f-82e7-4574eb1dab0d"),
                            AccountHeaderName = "Asset",
                            AccountHeaderNo = 100,
                            AccountName = "Kas",
                            AccountNo = 111
                        },
                        new
                        {
                            Id = new Guid("2d4d1231-267f-4f8d-9967-0c06718eac09"),
                            AccountHeaderName = "Asset",
                            AccountHeaderNo = 100,
                            AccountName = "Bank",
                            AccountNo = 112
                        },
                        new
                        {
                            Id = new Guid("3c257b8b-10b0-46c6-b63f-71296619cb65"),
                            AccountHeaderName = "Asset",
                            AccountHeaderNo = 100,
                            AccountName = "Persediaan",
                            AccountNo = 113
                        },
                        new
                        {
                            Id = new Guid("6384d92c-cd73-4219-86b0-a653f5b72adc"),
                            AccountHeaderName = "Asset",
                            AccountHeaderNo = 100,
                            AccountName = "Perlengkapan",
                            AccountNo = 114
                        },
                        new
                        {
                            Id = new Guid("5b6e2813-bbbc-497e-a19a-d914377514b2"),
                            AccountHeaderName = "Asset",
                            AccountHeaderNo = 100,
                            AccountName = "Sewa dibayar di muka",
                            AccountNo = 115
                        },
                        new
                        {
                            Id = new Guid("d63d4f83-52fd-40bb-bd0b-b0f60248b282"),
                            AccountHeaderName = "Asset",
                            AccountHeaderNo = 100,
                            AccountName = "Peralatan",
                            AccountNo = 121
                        },
                        new
                        {
                            Id = new Guid("d9fb8c52-1982-4aa3-96aa-3d9f98d220d4"),
                            AccountHeaderName = "Asset",
                            AccountHeaderNo = 100,
                            AccountName = "Akumulasi Depresiasi - Mesin Cuci",
                            AccountNo = 122
                        },
                        new
                        {
                            Id = new Guid("fa87aab7-a87f-4ee0-bc51-9b7df8247f33"),
                            AccountHeaderName = "Liabilitas",
                            AccountHeaderNo = 200,
                            AccountName = "Utang Usaha",
                            AccountNo = 201
                        },
                        new
                        {
                            Id = new Guid("b3433c9f-5092-42de-a819-d08c13e2c786"),
                            AccountHeaderName = "Ekuitas",
                            AccountHeaderNo = 300,
                            AccountName = "Ekuitas Pemilik Usaha",
                            AccountNo = 301
                        },
                        new
                        {
                            Id = new Guid("e7decc39-8496-4f8e-98ae-12ccf533f61b"),
                            AccountHeaderName = "Pendapatan",
                            AccountHeaderNo = 400,
                            AccountName = "Pendapatan Penjualan",
                            AccountNo = 401
                        },
                        new
                        {
                            Id = new Guid("d213010c-ce6c-4712-9699-fb504986d9e9"),
                            AccountHeaderName = "Pengeluaran",
                            AccountHeaderNo = 500,
                            AccountName = "Beban Gaji",
                            AccountNo = 501
                        },
                        new
                        {
                            Id = new Guid("ec6d2e6b-009b-4824-aa5a-1f014455b6d6"),
                            AccountHeaderName = "Pengeluaran",
                            AccountHeaderNo = 500,
                            AccountName = "Beban Sewa",
                            AccountNo = 502
                        },
                        new
                        {
                            Id = new Guid("57060c37-e3f1-4871-b565-df83f354edaa"),
                            AccountHeaderName = "Pengeluaran",
                            AccountHeaderNo = 500,
                            AccountName = "Beban Utilitas",
                            AccountNo = 503
                        },
                        new
                        {
                            Id = new Guid("531c171b-4b4a-4ca3-8a3b-db705903b051"),
                            AccountHeaderName = "Pengeluaran",
                            AccountHeaderNo = 500,
                            AccountName = "Beban Listrik",
                            AccountNo = 504
                        },
                        new
                        {
                            Id = new Guid("5c168ca1-33bb-43ef-aeb3-6c8989d9fd2b"),
                            AccountHeaderName = "Pengeluaran",
                            AccountHeaderNo = 500,
                            AccountName = "Beban Perlengkapan",
                            AccountNo = 505
                        },
                        new
                        {
                            Id = new Guid("01315a51-bbc7-4e22-bfb0-abce26d2607c"),
                            AccountHeaderName = "Pengeluaran",
                            AccountHeaderNo = 500,
                            AccountName = "Beban Depresiasi",
                            AccountNo = 506
                        });
                });

            modelBuilder.Entity("WebAPI.Models.Currency", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CultureName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.HasIndex("Name", "Code", "CultureName")
                        .IsUnique();

                    b.ToTable("currency");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b97e9501-e2c9-4273-8fea-f437d21ef75c"),
                            Code = "IDR",
                            CultureName = "id-ID",
                            Name = "Indonesia Rupiah"
                        },
                        new
                        {
                            Id = new Guid("2b1b149c-93b5-485d-bc6e-26167e0ac899"),
                            Code = "SGD",
                            CultureName = "en-SG",
                            Name = "Dollar Singapore"
                        },
                        new
                        {
                            Id = new Guid("1b97d48f-1ce4-4d08-93e0-96dc1fdd1c9f"),
                            Code = "MYR",
                            CultureName = "ms-MY",
                            Name = "Ringgit Malaysia"
                        },
                        new
                        {
                            Id = new Guid("4438c3b5-093f-4a58-a112-b91004431915"),
                            Code = "USD",
                            CultureName = "en-US",
                            Name = "Dollar USD"
                        });
                });

            modelBuilder.Entity("WebAPI.Models.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CurrencyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomerAddress")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("CustomerCode")
                        .IsUnique();

                    b.ToTable("customer");
                });

            modelBuilder.Entity("WebAPI.Models.GeneralAccountDetail", b =>
                {
                    b.Property<Guid>("GeneralAccountHeaderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("GeneralAccountDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<Guid>("ChartOfAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Credit")
                        .HasPrecision(19, 4)
                        .HasColumnType("decimal(19,4)");

                    b.Property<decimal>("Debit")
                        .HasPrecision(19, 4)
                        .HasColumnType("decimal(19,4)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GeneralAccountHeaderId", "GeneralAccountDetailId");

                    b.HasIndex("ChartOfAccountId");

                    b.ToTable("general_account_detail");
                });

            modelBuilder.Entity("WebAPI.Models.GeneralAccountHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("date");

                    b.Property<string>("TransactionNo")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.HasIndex("TransactionNo")
                        .IsUnique();

                    b.ToTable("general_account_header");
                });

            modelBuilder.Entity("WebAPI.Models.Inventory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("ItemNo")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ItemNo")
                        .IsUnique();

                    b.ToTable("inventory");
                });

            modelBuilder.Entity("WebAPI.Models.LaundryService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LaundryProcess")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("laundry_service");

                    b.HasData(
                        new
                        {
                            Id = new Guid("24f4688c-0696-4cbc-b9bf-beebf045cd01"),
                            LaundryProcess = 7,
                            Name = "PAKET BULANAN LENGKAP"
                        },
                        new
                        {
                            Id = new Guid("17316939-27da-4072-9e9f-151f1dcbbf1e"),
                            LaundryProcess = 4,
                            Name = "PAKET BULANAN SETRIKA"
                        },
                        new
                        {
                            Id = new Guid("c1e34235-5f6c-4549-9c27-f0feee77c4cc"),
                            LaundryProcess = 3,
                            Name = "SATUAN"
                        },
                        new
                        {
                            Id = new Guid("79557007-dc13-4a39-831d-d9bf0b17cd38"),
                            LaundryProcess = 3,
                            Name = "SEPATU DAN TAS"
                        },
                        new
                        {
                            Id = new Guid("c6b1f038-dcda-41bf-9ecb-ce213ea84ab6"),
                            LaundryProcess = 3,
                            Name = "KARPET/GORDEN"
                        },
                        new
                        {
                            Id = new Guid("8cd87758-7af4-4b0d-a3d1-798fc26d65b8"),
                            LaundryProcess = 7,
                            Name = "KILOAN LENGKAP"
                        },
                        new
                        {
                            Id = new Guid("81fca663-9d6f-4d57-88bf-60572d75bd27"),
                            LaundryProcess = 7,
                            Name = "KILOAN SETRIKA/CUCI LIPAT"
                        },
                        new
                        {
                            Id = new Guid("35142756-3afd-477b-9248-a75eab53a95e"),
                            LaundryProcess = 3,
                            Name = "BED COVER & SELIMUT"
                        },
                        new
                        {
                            Id = new Guid("26f330d9-b716-4947-b318-430719eb06b8"),
                            LaundryProcess = 3,
                            Name = "SPREI & ALAS KASUR"
                        },
                        new
                        {
                            Id = new Guid("43896f0e-231d-4765-8700-24c8422033e0"),
                            LaundryProcess = 3,
                            Name = "BANTAL/BONEKA"
                        });
                });

            modelBuilder.Entity("WebAPI.Models.PriceMenu", b =>
                {
                    b.Property<Guid>("LaundryServiceId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("PriceMenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeliveryOption")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Price")
                        .HasPrecision(19, 3)
                        .HasColumnType("decimal(19,3)");

                    b.Property<int>("PricingOption")
                        .HasColumnType("int");

                    b.Property<int>("ProcessingTime")
                        .HasColumnType("int");

                    b.Property<int>("TimeUnit")
                        .HasColumnType("int");

                    b.HasKey("LaundryServiceId", "PriceMenuId");

                    b.HasIndex("LaundryServiceId", "Name", "DeliveryOption")
                        .IsUnique();

                    b.ToTable("price_menu");

                    b.HasData(
                        new
                        {
                            LaundryServiceId = new Guid("24f4688c-0696-4cbc-b9bf-beebf045cd01"),
                            PriceMenuId = new Guid("c086f307-e7ba-42b4-b4fc-9ee88a66833d"),
                            DeliveryOption = 0,
                            Name = "25 Kgs",
                            Price = 140000m,
                            PricingOption = 8,
                            ProcessingTime = 0,
                            TimeUnit = 0
                        },
                        new
                        {
                            LaundryServiceId = new Guid("24f4688c-0696-4cbc-b9bf-beebf045cd01"),
                            PriceMenuId = new Guid("334e12eb-27f1-4884-b477-c9251d9d80f8"),
                            DeliveryOption = 0,
                            Name = "50 Kgs",
                            Price = 275000m,
                            PricingOption = 8,
                            ProcessingTime = 0,
                            TimeUnit = 0
                        },
                        new
                        {
                            LaundryServiceId = new Guid("24f4688c-0696-4cbc-b9bf-beebf045cd01"),
                            PriceMenuId = new Guid("78cee24c-15c3-479e-9d69-5898f39bc780"),
                            DeliveryOption = 0,
                            Name = "100 Kgs",
                            Price = 550000m,
                            PricingOption = 8,
                            ProcessingTime = 0,
                            TimeUnit = 0
                        },
                        new
                        {
                            LaundryServiceId = new Guid("17316939-27da-4072-9e9f-151f1dcbbf1e"),
                            PriceMenuId = new Guid("bcb2c904-25e0-4430-b015-3863bcbfc745"),
                            DeliveryOption = 0,
                            Name = "25 Kgs",
                            Price = 120000m,
                            PricingOption = 8,
                            ProcessingTime = 0,
                            TimeUnit = 0
                        },
                        new
                        {
                            LaundryServiceId = new Guid("17316939-27da-4072-9e9f-151f1dcbbf1e"),
                            PriceMenuId = new Guid("6b1a7b00-24fc-4fce-843e-dcf3360d5a61"),
                            DeliveryOption = 0,
                            Name = "50 Kgs",
                            Price = 240000m,
                            PricingOption = 8,
                            ProcessingTime = 0,
                            TimeUnit = 0
                        },
                        new
                        {
                            LaundryServiceId = new Guid("17316939-27da-4072-9e9f-151f1dcbbf1e"),
                            PriceMenuId = new Guid("b41e6970-585c-490d-beb5-0c778d5a82fd"),
                            DeliveryOption = 0,
                            Name = "100 Kgs",
                            Price = 475000m,
                            PricingOption = 8,
                            ProcessingTime = 0,
                            TimeUnit = 0
                        },
                        new
                        {
                            LaundryServiceId = new Guid("c1e34235-5f6c-4549-9c27-f0feee77c4cc"),
                            PriceMenuId = new Guid("4fc0e852-47c1-4d52-b36b-6166003a001a"),
                            DeliveryOption = 1,
                            Name = "Bawahan",
                            Price = 10000m,
                            PricingOption = 1,
                            ProcessingTime = 2,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("c1e34235-5f6c-4549-9c27-f0feee77c4cc"),
                            PriceMenuId = new Guid("08fbed71-be1b-4d7c-bbc9-df5376dcffca"),
                            DeliveryOption = 1,
                            Name = "Atasan",
                            Price = 10000m,
                            PricingOption = 1,
                            ProcessingTime = 2,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("c1e34235-5f6c-4549-9c27-f0feee77c4cc"),
                            PriceMenuId = new Guid("c92ca872-6ee2-471b-a807-0064028afcae"),
                            DeliveryOption = 1,
                            Name = "Jas",
                            Price = 20000m,
                            PricingOption = 1,
                            ProcessingTime = 2,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("c1e34235-5f6c-4549-9c27-f0feee77c4cc"),
                            PriceMenuId = new Guid("3f3d13a8-1845-493f-865d-50934dd13385"),
                            DeliveryOption = 1,
                            Name = "Jas Set",
                            Price = 30000m,
                            PricingOption = 1,
                            ProcessingTime = 2,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("c1e34235-5f6c-4549-9c27-f0feee77c4cc"),
                            PriceMenuId = new Guid("aed413e7-7a42-4a77-beab-9cc58a4d0b33"),
                            DeliveryOption = 1,
                            Name = "Blazer",
                            Price = 15000m,
                            PricingOption = 1,
                            ProcessingTime = 2,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("c1e34235-5f6c-4549-9c27-f0feee77c4cc"),
                            PriceMenuId = new Guid("5f96413b-8a34-4736-a53c-7ed0ba04ba45"),
                            DeliveryOption = 1,
                            Name = "Blazer Set",
                            Price = 25000m,
                            PricingOption = 1,
                            ProcessingTime = 2,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("c1e34235-5f6c-4549-9c27-f0feee77c4cc"),
                            PriceMenuId = new Guid("98e98c39-7d42-436a-bfa9-ffbfa93f8676"),
                            DeliveryOption = 1,
                            Name = "Dress Panjang",
                            Price = 15000m,
                            PricingOption = 1,
                            ProcessingTime = 2,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("c1e34235-5f6c-4549-9c27-f0feee77c4cc"),
                            PriceMenuId = new Guid("3a5ec84a-f4da-46cc-8e58-9e7f0f053172"),
                            DeliveryOption = 1,
                            Name = "Dress Pendek",
                            Price = 15000m,
                            PricingOption = 1,
                            ProcessingTime = 2,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("c1e34235-5f6c-4549-9c27-f0feee77c4cc"),
                            PriceMenuId = new Guid("43ac258a-ecc4-47fe-a5a0-4b4d59b42b3c"),
                            DeliveryOption = 1,
                            Name = "Jaket/Sweater",
                            Price = 15000m,
                            PricingOption = 1,
                            ProcessingTime = 2,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("c1e34235-5f6c-4549-9c27-f0feee77c4cc"),
                            PriceMenuId = new Guid("dec69d42-6def-459f-8a50-ed5d08fe5771"),
                            DeliveryOption = 1,
                            Name = "Handuk Besar",
                            Price = 7000m,
                            PricingOption = 1,
                            ProcessingTime = 2,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("c1e34235-5f6c-4549-9c27-f0feee77c4cc"),
                            PriceMenuId = new Guid("a9c6093c-ad08-4d64-9e11-6dc5578c8e9c"),
                            DeliveryOption = 1,
                            Name = "Handuk Sedang",
                            Price = 6000m,
                            PricingOption = 1,
                            ProcessingTime = 2,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("79557007-dc13-4a39-831d-d9bf0b17cd38"),
                            PriceMenuId = new Guid("845c49c4-99db-4f81-9c90-78b446abb1d8"),
                            DeliveryOption = 1,
                            Name = "Sepatu",
                            Price = 25000m,
                            PricingOption = 1,
                            ProcessingTime = 2,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("79557007-dc13-4a39-831d-d9bf0b17cd38"),
                            PriceMenuId = new Guid("f90f1bef-b84b-4380-ac67-e715f065463e"),
                            DeliveryOption = 1,
                            Name = "Tas Besar",
                            Price = 30000m,
                            PricingOption = 1,
                            ProcessingTime = 2,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("79557007-dc13-4a39-831d-d9bf0b17cd38"),
                            PriceMenuId = new Guid("4af17f1e-e195-4588-9a83-1e345f772d19"),
                            DeliveryOption = 1,
                            Name = "Tas Sedang",
                            Price = 25000m,
                            PricingOption = 1,
                            ProcessingTime = 2,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("79557007-dc13-4a39-831d-d9bf0b17cd38"),
                            PriceMenuId = new Guid("5fab4a4f-a337-46dc-88d4-70bbd1bb39ee"),
                            DeliveryOption = 1,
                            Name = "Tas Kecil",
                            Price = 15000m,
                            PricingOption = 1,
                            ProcessingTime = 2,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("79557007-dc13-4a39-831d-d9bf0b17cd38"),
                            PriceMenuId = new Guid("c01d3528-de64-4373-af8b-35c9789d1e90"),
                            DeliveryOption = 1,
                            Name = "Tas Mini",
                            Price = 10000m,
                            PricingOption = 1,
                            ProcessingTime = 2,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("8cd87758-7af4-4b0d-a3d1-798fc26d65b8"),
                            PriceMenuId = new Guid("d5f5f01e-3b91-4a7c-9004-9e335a59930d"),
                            DeliveryOption = 1,
                            Name = "Reguler",
                            Price = 6000m,
                            PricingOption = 2,
                            ProcessingTime = 2,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("8cd87758-7af4-4b0d-a3d1-798fc26d65b8"),
                            PriceMenuId = new Guid("b6a7d82c-dd29-4319-8da2-790479e657cc"),
                            DeliveryOption = 2,
                            Name = "One Day",
                            Price = 8000m,
                            PricingOption = 2,
                            ProcessingTime = 1,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("8cd87758-7af4-4b0d-a3d1-798fc26d65b8"),
                            PriceMenuId = new Guid("889c7b44-d349-4dbe-9be5-e25b1193d9a3"),
                            DeliveryOption = 4,
                            Name = "Express",
                            Price = 10000m,
                            PricingOption = 2,
                            ProcessingTime = 6,
                            TimeUnit = 1
                        },
                        new
                        {
                            LaundryServiceId = new Guid("81fca663-9d6f-4d57-88bf-60572d75bd27"),
                            PriceMenuId = new Guid("3a43e75b-f4a9-46b5-992e-42c0a5416220"),
                            DeliveryOption = 1,
                            Name = "Reguler",
                            Price = 5000m,
                            PricingOption = 2,
                            ProcessingTime = 2,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("81fca663-9d6f-4d57-88bf-60572d75bd27"),
                            PriceMenuId = new Guid("f29c039b-758d-4c61-9df2-1bbacb84df45"),
                            DeliveryOption = 2,
                            Name = "One Day",
                            Price = 7000m,
                            PricingOption = 2,
                            ProcessingTime = 1,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("81fca663-9d6f-4d57-88bf-60572d75bd27"),
                            PriceMenuId = new Guid("067b1d37-b571-4b5f-9d08-26ff4e554650"),
                            DeliveryOption = 4,
                            Name = "Express",
                            Price = 9000m,
                            PricingOption = 2,
                            ProcessingTime = 6,
                            TimeUnit = 1
                        },
                        new
                        {
                            LaundryServiceId = new Guid("35142756-3afd-477b-9248-a75eab53a95e"),
                            PriceMenuId = new Guid("0aea0c48-4670-46f0-8fef-6c458fad04e4"),
                            DeliveryOption = 1,
                            Name = "Bed Cover King Set",
                            Price = 38000m,
                            PricingOption = 4,
                            ProcessingTime = 3,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("35142756-3afd-477b-9248-a75eab53a95e"),
                            PriceMenuId = new Guid("7aeb0f91-6136-484c-ae71-38e99b45ea62"),
                            DeliveryOption = 1,
                            Name = "Bed Cover Queen Set",
                            Price = 35000m,
                            PricingOption = 4,
                            ProcessingTime = 3,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("35142756-3afd-477b-9248-a75eab53a95e"),
                            PriceMenuId = new Guid("034f695b-fb6b-4d05-bd83-1e3e2e18df24"),
                            DeliveryOption = 1,
                            Name = "Bed Cover Single Set",
                            Price = 27000m,
                            PricingOption = 4,
                            ProcessingTime = 3,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("35142756-3afd-477b-9248-a75eab53a95e"),
                            PriceMenuId = new Guid("66ec3a9e-7c28-4b89-906c-453f7f333343"),
                            DeliveryOption = 1,
                            Name = "Bed Cover King",
                            Price = 25000m,
                            PricingOption = 1,
                            ProcessingTime = 3,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("35142756-3afd-477b-9248-a75eab53a95e"),
                            PriceMenuId = new Guid("2941b8ed-e5f4-4987-b3ec-956ae30a8095"),
                            DeliveryOption = 1,
                            Name = "Bed Cover Queen",
                            Price = 20000m,
                            PricingOption = 1,
                            ProcessingTime = 3,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("35142756-3afd-477b-9248-a75eab53a95e"),
                            PriceMenuId = new Guid("2c153408-28e9-4cbf-a233-33c99d7a8481"),
                            DeliveryOption = 1,
                            Name = "Bed Cover Single",
                            Price = 15000m,
                            PricingOption = 1,
                            ProcessingTime = 3,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("35142756-3afd-477b-9248-a75eab53a95e"),
                            PriceMenuId = new Guid("012356fc-52f4-40cf-9555-1555249db7d0"),
                            DeliveryOption = 1,
                            Name = "Selimut",
                            Price = 15000m,
                            PricingOption = 1,
                            ProcessingTime = 3,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("35142756-3afd-477b-9248-a75eab53a95e"),
                            PriceMenuId = new Guid("7776add1-ea90-4104-9c61-08a4bbe398ab"),
                            DeliveryOption = 1,
                            Name = "Selimut Tipis",
                            Price = 10000m,
                            PricingOption = 1,
                            ProcessingTime = 3,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("35142756-3afd-477b-9248-a75eab53a95e"),
                            PriceMenuId = new Guid("865c44f6-8606-4dc0-bd11-b51c9c1b8f35"),
                            DeliveryOption = 4,
                            Name = "Bed Cover King Set",
                            Price = 76000m,
                            PricingOption = 4,
                            ProcessingTime = 6,
                            TimeUnit = 1
                        },
                        new
                        {
                            LaundryServiceId = new Guid("35142756-3afd-477b-9248-a75eab53a95e"),
                            PriceMenuId = new Guid("c37628e1-a20f-461d-aafe-1aa4d3438b10"),
                            DeliveryOption = 4,
                            Name = "Bed Cover Queen Set",
                            Price = 70000m,
                            PricingOption = 4,
                            ProcessingTime = 6,
                            TimeUnit = 1
                        },
                        new
                        {
                            LaundryServiceId = new Guid("35142756-3afd-477b-9248-a75eab53a95e"),
                            PriceMenuId = new Guid("7429d8ac-c51f-4783-b3ac-4822ddf3e623"),
                            DeliveryOption = 4,
                            Name = "Bed Cover Single Set",
                            Price = 54000m,
                            PricingOption = 4,
                            ProcessingTime = 6,
                            TimeUnit = 1
                        },
                        new
                        {
                            LaundryServiceId = new Guid("35142756-3afd-477b-9248-a75eab53a95e"),
                            PriceMenuId = new Guid("f315c1c9-cca5-4054-bc80-e09ec4ce9713"),
                            DeliveryOption = 4,
                            Name = "Bed Cover King",
                            Price = 50000m,
                            PricingOption = 1,
                            ProcessingTime = 6,
                            TimeUnit = 1
                        },
                        new
                        {
                            LaundryServiceId = new Guid("35142756-3afd-477b-9248-a75eab53a95e"),
                            PriceMenuId = new Guid("74b14ddf-b7cc-47d7-b1c0-805c0cda254f"),
                            DeliveryOption = 4,
                            Name = "Bed Cover Queen",
                            Price = 40000m,
                            PricingOption = 1,
                            ProcessingTime = 6,
                            TimeUnit = 1
                        },
                        new
                        {
                            LaundryServiceId = new Guid("35142756-3afd-477b-9248-a75eab53a95e"),
                            PriceMenuId = new Guid("a1df3c83-179c-49d3-99aa-63bca1167db2"),
                            DeliveryOption = 4,
                            Name = "Bed Cover Single",
                            Price = 30000m,
                            PricingOption = 1,
                            ProcessingTime = 6,
                            TimeUnit = 1
                        },
                        new
                        {
                            LaundryServiceId = new Guid("35142756-3afd-477b-9248-a75eab53a95e"),
                            PriceMenuId = new Guid("be8dacea-4048-4e23-9cf8-c0315eb25311"),
                            DeliveryOption = 4,
                            Name = "Selimut",
                            Price = 30000m,
                            PricingOption = 1,
                            ProcessingTime = 6,
                            TimeUnit = 1
                        },
                        new
                        {
                            LaundryServiceId = new Guid("35142756-3afd-477b-9248-a75eab53a95e"),
                            PriceMenuId = new Guid("2fb750c9-dfc5-47a2-8759-124f01061e29"),
                            DeliveryOption = 4,
                            Name = "Selimut Tipis",
                            Price = 20000m,
                            PricingOption = 1,
                            ProcessingTime = 6,
                            TimeUnit = 1
                        },
                        new
                        {
                            LaundryServiceId = new Guid("26f330d9-b716-4947-b318-430719eb06b8"),
                            PriceMenuId = new Guid("9e330b40-4a53-45ae-8fff-501c6d5f5196"),
                            DeliveryOption = 1,
                            Name = "Sprei King Set",
                            Price = 20000m,
                            PricingOption = 4,
                            ProcessingTime = 3,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("26f330d9-b716-4947-b318-430719eb06b8"),
                            PriceMenuId = new Guid("185ab6b1-5920-49c8-9f19-0d2e2d52e5ab"),
                            DeliveryOption = 1,
                            Name = "Sprei Quen Set",
                            Price = 20000m,
                            PricingOption = 4,
                            ProcessingTime = 3,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("26f330d9-b716-4947-b318-430719eb06b8"),
                            PriceMenuId = new Guid("519a7bea-2a73-4074-a6d3-1060545265e4"),
                            DeliveryOption = 1,
                            Name = "Sprei Single Set",
                            Price = 15000m,
                            PricingOption = 4,
                            ProcessingTime = 3,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("26f330d9-b716-4947-b318-430719eb06b8"),
                            PriceMenuId = new Guid("05baa46f-a786-412b-afba-83fcf32b7524"),
                            DeliveryOption = 1,
                            Name = "Sprei King",
                            Price = 15000m,
                            PricingOption = 1,
                            ProcessingTime = 3,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("26f330d9-b716-4947-b318-430719eb06b8"),
                            PriceMenuId = new Guid("6e171c25-7730-4764-83a5-7f84e95e99a9"),
                            DeliveryOption = 1,
                            Name = "Sprei Queen",
                            Price = 15000m,
                            PricingOption = 1,
                            ProcessingTime = 3,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("26f330d9-b716-4947-b318-430719eb06b8"),
                            PriceMenuId = new Guid("77789a6e-cc71-44bf-bee1-6e3d1bdf5b4a"),
                            DeliveryOption = 1,
                            Name = "Sprei Single",
                            Price = 10000m,
                            PricingOption = 1,
                            ProcessingTime = 3,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("26f330d9-b716-4947-b318-430719eb06b8"),
                            PriceMenuId = new Guid("aace7aed-4ed7-4c24-be15-b19376c92c28"),
                            DeliveryOption = 1,
                            Name = "Alas Kasur King",
                            Price = 25000m,
                            PricingOption = 1,
                            ProcessingTime = 3,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("26f330d9-b716-4947-b318-430719eb06b8"),
                            PriceMenuId = new Guid("9f930088-e479-4040-aaab-4580a854e5b9"),
                            DeliveryOption = 1,
                            Name = "Alas Kasur Queen",
                            Price = 20000m,
                            PricingOption = 1,
                            ProcessingTime = 3,
                            TimeUnit = 2
                        },
                        new
                        {
                            LaundryServiceId = new Guid("26f330d9-b716-4947-b318-430719eb06b8"),
                            PriceMenuId = new Guid("e2bef248-ee3c-4c90-b60a-8851744722a2"),
                            DeliveryOption = 1,
                            Name = "Alas Kasur Single",
                            Price = 15000m,
                            PricingOption = 1,
                            ProcessingTime = 3,
                            TimeUnit = 2
                        });
                });

            modelBuilder.Entity("WebAPI.Models.PurchaseDetail", b =>
                {
                    b.Property<Guid>("PurchaseHeaderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("PurchaseDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("InventoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasPrecision(19, 4)
                        .HasColumnType("decimal(19,4)");

                    b.Property<decimal>("Quantity")
                        .HasPrecision(19, 4)
                        .HasColumnType("decimal(19,4)");

                    b.HasKey("PurchaseHeaderId", "PurchaseDetailId");

                    b.HasIndex("InventoryId");

                    b.ToTable("purchase_detail");
                });

            modelBuilder.Entity("WebAPI.Models.PurchaseHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CurrencyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("date");

                    b.Property<string>("PurchaseNo")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<Guid>("SupplierId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("PurchaseNo")
                        .IsUnique();

                    b.HasIndex("SupplierId");

                    b.ToTable("purchase_header");
                });

            modelBuilder.Entity("WebAPI.Models.SalesDetail", b =>
                {
                    b.Property<Guid>("SalesHeaderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("SalesDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LaundryServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasPrecision(19, 4)
                        .HasColumnType("decimal(19,4)");

                    b.Property<Guid>("PriceMenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Quantity")
                        .HasPrecision(19, 4)
                        .HasColumnType("decimal(19,4)");

                    b.HasKey("SalesHeaderId", "SalesDetailId");

                    b.HasIndex("LaundryServiceId", "PriceMenuId");

                    b.ToTable("sales_detail");
                });

            modelBuilder.Entity("WebAPI.Models.SalesHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CurrencyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SalesDate")
                        .HasColumnType("date");

                    b.Property<string>("SalesNo")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("SalesNo")
                        .IsUnique();

                    b.ToTable("sales_header");
                });

            modelBuilder.Entity("WebAPI.Models.SalesPayment", b =>
                {
                    b.Property<Guid>("SalesPaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<Guid>("SalesHeaderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<decimal>("Amount")
                        .HasPrecision(19, 4)
                        .HasColumnType("decimal(19,4)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SalesPaymentId", "SalesHeaderId");

                    b.HasIndex("SalesHeaderId");

                    b.ToTable("sales_payment");
                });

            modelBuilder.Entity("WebAPI.Models.Supplier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CurrencyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierCode")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("SupplierCode")
                        .IsUnique();

                    b.ToTable("supplier");
                });

            modelBuilder.Entity("WebAPI.Models.ApplicationUserRole", b =>
                {
                    b.HasOne("WebAPI.Models.ApplicationRole", "ApplicationRole")
                        .WithMany("UserRoles")
                        .HasForeignKey("ApplicationRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("UserRoles")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationRole");

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("WebAPI.Models.ChartOfAccount", b =>
                {
                    b.HasOne("WebAPI.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("WebAPI.Models.Customer", b =>
                {
                    b.HasOne("WebAPI.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("WebAPI.Models.GeneralAccountDetail", b =>
                {
                    b.HasOne("WebAPI.Models.ChartOfAccount", "ChartOfAccount")
                        .WithMany("GeneralAccountDetails")
                        .HasForeignKey("ChartOfAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.Models.GeneralAccountHeader", "GeneralAccountHeader")
                        .WithMany("GeneralAccountDetails")
                        .HasForeignKey("GeneralAccountHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChartOfAccount");

                    b.Navigation("GeneralAccountHeader");
                });

            modelBuilder.Entity("WebAPI.Models.PriceMenu", b =>
                {
                    b.HasOne("WebAPI.Models.LaundryService", "LaundryService")
                        .WithMany("PriceMenus")
                        .HasForeignKey("LaundryServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LaundryService");
                });

            modelBuilder.Entity("WebAPI.Models.PurchaseDetail", b =>
                {
                    b.HasOne("WebAPI.Models.Inventory", "Inventory")
                        .WithMany("PurchaseDetails")
                        .HasForeignKey("InventoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.Models.PurchaseHeader", "PurchaseHeader")
                        .WithMany("PurchaseDetails")
                        .HasForeignKey("PurchaseHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inventory");

                    b.Navigation("PurchaseHeader");
                });

            modelBuilder.Entity("WebAPI.Models.PurchaseHeader", b =>
                {
                    b.HasOne("WebAPI.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("WebAPI.Models.Supplier", "Supplier")
                        .WithMany("PurchaseHeaders")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("WebAPI.Models.SalesDetail", b =>
                {
                    b.HasOne("WebAPI.Models.LaundryService", "LaundryService")
                        .WithMany()
                        .HasForeignKey("LaundryServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.Models.SalesHeader", "SalesHeader")
                        .WithMany("SalesDetails")
                        .HasForeignKey("SalesHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.Models.PriceMenu", "PriceMenu")
                        .WithMany("SalesDetails")
                        .HasForeignKey("LaundryServiceId", "PriceMenuId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("LaundryService");

                    b.Navigation("PriceMenu");

                    b.Navigation("SalesHeader");
                });

            modelBuilder.Entity("WebAPI.Models.SalesHeader", b =>
                {
                    b.HasOne("WebAPI.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("WebAPI.Models.Customer", "Customer")
                        .WithMany("SalesHeaders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("WebAPI.Models.SalesPayment", b =>
                {
                    b.HasOne("WebAPI.Models.SalesHeader", "SalesHeader")
                        .WithMany("SalesPayments")
                        .HasForeignKey("SalesHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SalesHeader");
                });

            modelBuilder.Entity("WebAPI.Models.Supplier", b =>
                {
                    b.HasOne("WebAPI.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("WebAPI.Models.ApplicationRole", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("WebAPI.Models.ApplicationUser", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("WebAPI.Models.ChartOfAccount", b =>
                {
                    b.Navigation("GeneralAccountDetails");
                });

            modelBuilder.Entity("WebAPI.Models.Customer", b =>
                {
                    b.Navigation("SalesHeaders");
                });

            modelBuilder.Entity("WebAPI.Models.GeneralAccountHeader", b =>
                {
                    b.Navigation("GeneralAccountDetails");
                });

            modelBuilder.Entity("WebAPI.Models.Inventory", b =>
                {
                    b.Navigation("PurchaseDetails");
                });

            modelBuilder.Entity("WebAPI.Models.LaundryService", b =>
                {
                    b.Navigation("PriceMenus");
                });

            modelBuilder.Entity("WebAPI.Models.PriceMenu", b =>
                {
                    b.Navigation("SalesDetails");
                });

            modelBuilder.Entity("WebAPI.Models.PurchaseHeader", b =>
                {
                    b.Navigation("PurchaseDetails");
                });

            modelBuilder.Entity("WebAPI.Models.SalesHeader", b =>
                {
                    b.Navigation("SalesDetails");

                    b.Navigation("SalesPayments");
                });

            modelBuilder.Entity("WebAPI.Models.Supplier", b =>
                {
                    b.Navigation("PurchaseHeaders");
                });
#pragma warning restore 612, 618
        }
    }
}
